.gradient(@start: #EEEEEE, @stop: #FFFFFF) {
    background: @start;
    background: -webkit-gradient(linear, left top, left bottom, from(@start), to(@stop));
    background: -webkit-linear-gradient(top, @start, @stop);
    background:    -moz-linear-gradient(top, @start, @stop);
    background:     -ms-linear-gradient(top, @start, @stop);
    background:      -o-linear-gradient(top, @start, @stop);
    background:         linear-gradient(to bottom, @start, @stop);

    filter: e("progid:DXImageTransform.Microsoft.gradient(GradientType=0,startColorstr='@{start}', endColorstr='@{stop}') ");
    -ms-filter: e(" progid:DXImageTransform.Microsoft.gradient(GradientType=0,startColorstr='@{start}', endColorstr='@{stop}') ");
}
.gradient-alpha(@start: #EEE, @start-alpha:0, @stop: #FFF, @stop-alpha:1){
    @startAlphaColour: hsla(hue(@start), saturation(@start), lightness(@start), @start-alpha);
    @startIeAlphaColour: argb(@startAlphaColour);
    @stopAlphaColour: hsla(hue(@stop), saturation(@stop), lightness(@stop), @stop-alpha);
    @stopIeAlphaColour: argb(@stopAlphaColour);

    background: @start;
    background: -webkit-gradient(linear, left top, left bottom, from(@startAlphaColour), to(@stopAlphaColour));
    background: -webkit-linear-gradient(top, @startAlphaColour, @stopAlphaColour);
    background:    -moz-linear-gradient(top, @startAlphaColour, @stopAlphaColour);
    background:     -ms-linear-gradient(top, @startAlphaColour, @stopAlphaColour);
    background:      -o-linear-gradient(top, @startAlphaColour, @stopAlphaColour);
    background:         linear-gradient(to bottom, @startAlphaColour, @stopAlphaColour);
    filter: e("progid:DXImageTransform.Microsoft.gradient( GradientType=0,startColorstr='@{startIeAlphaColour}', endColorstr='@{stopIeAlphaColour}' )");
    -ms-filter: e("progid:DXImageTransform.Microsoft.gradient(GradientType=0,startColorstr='@{startIeAlphaColour}', endColorstr='@{stopIeAlphaColour}')");
}
.gradient-h(@start: #EEE, @stop: #FFF) {
    background: @start; /* Old browsers */
    background: -moz-linear-gradient(left, @start 0%, @stop 100%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,@start), color-stop(100%,@stop));
    background: -webkit-linear-gradient(left, @start 0%,@stop 100%);
    background: -o-linear-gradient(left, @start 0%,@stop 100%);
    background: -ms-linear-gradient(left, @start 0%,@stop 100%);
    background: linear-gradient(left, @start 0%,@stop 100%);
    filter: e("progid:DXImageTransform.Microsoft.gradient(GradientType=1,startColorstr='@{start}', endColorstr='@{stop}')");
    -ms-filter: e("progid:DXImageTransform.Microsoft.gradient(GradientType=1,startColorstr='@{start}', endColorstr='@{stop}')");
}
.gradient-h-alpha(@start: #EEE, @start-alpha:0%, @stop: #FFF, @stop-alpha:100%){
    @startAlphaColour: hsla(hue(@start), saturation(@start), lightness(@start), @start-alpha);
    @startIeAlphaColour: argb(@startAlphaColour);
    @stopAlphaColour: hsla(hue(@stop), saturation(@stop), lightness(@stop), @stop-alpha);
    @stopIeAlphaColour: argb(@stopAlphaColour);

    background: -moz-linear-gradient(left, @startAlphaColour @start-alpha, @stopAlphaColour @stop-alpha);
    background: -webkit-gradient(linear, left top, right top, color-stop(@start-alpha,@startAlphaColour), color-stop(@stop-alpha,@stopAlphaColour));
    background: -webkit-linear-gradient(left, @startAlphaColour @start-alpha, @stopAlphaColour @stop-alpha);
    background: -o-linear-gradient(left, @startAlphaColour @start-alpha, @stopAlphaColour @stop-alpha);
    background: -ms-linear-gradient(left, @startAlphaColour @start-alpha, @stopAlphaColour @stop-alpha);
    background: linear-gradient(left, @startAlphaColour @start-alpha, @stopAlphaColour @stop-alpha);
    filter: e("progid:DXImageTransform.Microsoft.gradient( GradientType=1,startColorstr='@{startIeAlphaColour}', endColorstr='@{stopIeAlphaColour}' )");
    -ms-filter: e("progid:DXImageTransform.Microsoft.gradient(GradientType=1,startColorstr='@{startIeAlphaColour}', endColorstr='@{stopIeAlphaColour}')");
}
.transparent-bg(@color:#000, @opacity:.5){
    .gradient-alpha(@color, @opacity, @color, @opacity);
}
.rotation(@deg:5deg){
    -webkit-transform: rotate(@deg);
    -moz-transform: rotate(@deg);
    -ms-transform: rotate(90deg);
    -o-transform: rotate(90deg);
    transform: rotate(@deg);
}
.box-shadow(@arguments) {
    -webkit-box-shadow: @arguments;
    -moz-box-shadow: @arguments;
    box-shadow: @arguments;
}
.box-sizing(){
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}
.border-radius(@radius: 1px) {
    -webkit-border-radius: @radius;
    -moz-border-radius: @radius;
    border-radius: @radius;
    -moz-background-clip: padding; 
    -webkit-background-clip: padding-box; 
    background-clip: padding-box;
}
.opacity(@opacity:1) {
    @freakingie: @opacity * 100;
    -ms-filter: e("progid:DXImageTransform.Microsoft.Alpha(Opacity=@{freakingie})");
    filter: e("alpha ( opacity=@{freakingie})");
    -webkit-opacity: @opacity;
    -khtml-opacity: @opacity;
    -moz-opacity: @opacity;
    opacity: @opacity;
}
.transition(@transition:all .2s ease .1s) {
    -webkit-transition: @transition;
    -moz-transition: @transition;
    -o-transition: @transition;
    transition: @transition;
}
.filter(@filter: sepia(100%)) {
    filter: @filter;
    -webkit-filter: @filter; 
    -moz-filter: @filter;
    -ms-filter: @filter; 
    -o-filter: @filter;
}
.clearfix() {
    .lt-ie8 & { overflow:hidden; }
    .lt-ie9 & { zoom: 1; display:block; overflow:hidden; }
    &::before, &::after {
        display: table;
        content: "";
    }
    &::after {
        clear: both;
    }
}
.inline-block() {
    display:inline-block;
    .lt-ie7 & { display:inline; zoom:1; }
}
.table() {
    display:table;
    .lt-ie8 & { _height: 0; zoom: 1; }
}
// @font-face { .font('NameOfFont','UrlToFileOfFontWithoutExtension', 'FontWeight:normal|bold', 'FontStyle:normal|italic', 'base64 encoded woff font'); }
.font(@fontname, @fontfile, @weight: "normal", @style: "normal") {
    font-family: "@{fontname}";
    src: url("@{fontfile}.eot");    
    src: local('☺'), 
        url("@{fontfile}.eot?#@{fontname}") format('embedded-opentype'),
        url("@{fontfile}.woff") format('woff');
    font-weight: e("@{weight}");
    font-style: e("@{style}");
}
.font-emb(@fontname, @fontfile, @weight: "normal", @style: "normal", @base64) {
    font-family: "@{fontname}";
    src: url("@{fontfile}.eot");    
    src: local('☺'), 
        url("@{fontfile}.eot?#@{fontname}") format('embedded-opentype'),
        url("data:font/woff;charset=utf-8;base64,@{base64}") format('woff'),
        url("@{fontfile}.woff") format('woff');
    font-weight: e("@{weight}");
    font-style: e("@{style}");
}